"0","library(dplyr)"
"0","library(tidyr)"
"0","library(plotrix)"
"0",""
"0","#IMPORT REAL DATA"
"0","data <- read.csv(paste0(dirname(getwd()),'/data/data_real.csv'), sep = "";"")"
"0",""
"0",""
"0","#PREPROCESS DATA (ADD COLUMNS, CONVERT TO LONG FORMAT)"
"0","# Ensure relevant variables are numeric"
"0","data <- data %>% mutate(across(c(OddsHomeAvg, OddsDrawAvg, OddsAwayAvg, OddsHomeMax, OddsDrawMax, OddsAwayMax), as.numeric))"
"0",""
"0","#create indicator variables for home win / draw / away win"
"0","data <- data %>%"
"0","  mutate(homewin = ifelse(goalsHome > goalsAway, 1, 0),"
"0","         awaywin = ifelse(goalsHome < goalsAway, 1, 0),"
"0","         draw = ifelse(goalsHome == goalsAway, 1, 0))"
"0",""
"0","#create probabilities from odds (distinguishing between avg and max odds)"
"0","data <- data %>%"
"0","  mutate(invHomeMax = 1 / OddsHomeMax,"
"0","         invAwayMax = 1 / OddsAwayMax,"
"0","         invDrawMax = 1 / OddsDrawMax,"
"0","         invSumMax = invHomeMax + invAwayMax + invDrawMax,"
"0","         probHomeMax = invHomeMax / invSumMax,"
"0","         probAwayMax = invAwayMax / invSumMax,"
"0","         probDrawMax = invDrawMax / invSumMax,"
"0","         payoffHomeMax = ifelse(homewin == 1, OddsHomeMax, 0),"
"0","         payoffAwayMax = ifelse(awaywin == 1, OddsAwayMax, 0),"
"0","         payoffDrawMax = ifelse(draw == 1, OddsDrawMax, 0),"
"0","         invHomeAvg = 1 / OddsHomeAvg,"
"0","         invAwayAvg = 1 / OddsAwayAvg,"
"0","         invDrawAvg = 1 / OddsDrawAvg,"
"0","         invSumAvg = invHomeAvg + invAwayAvg + invDrawAvg,"
"0","         probHomeAvg = invHomeAvg / invSumAvg,"
"0","         probAwayAvg = invAwayAvg / invSumAvg,"
"0","         probDrawAvg = invDrawAvg / invSumAvg,"
"0","         payoffHomeAvg = ifelse(homewin == 1, OddsHomeAvg, 0),"
"0","         payoffAwayAvg = ifelse(awaywin == 1, OddsAwayAvg, 0),"
"0","         payoffDrawAvg = ifelse(draw == 1, OddsDrawAvg, 0))"
"0",""
"0",""
"0","# Reshape the data for probabilities into a ""long"" format "
"0","data_probs_long_max <- data %>%"
"0","  select(probHomeMax, probAwayMax, probDrawMax) %>%"
"0","  pivot_longer(cols = c(probHomeMax, probAwayMax, probDrawMax), names_to = ""probs_type"", values_to = ""probs"")"
"0",""
"0","data_probs_long_avg <- data %>%"
"0","  select(probHomeAvg, probAwayAvg, probDrawAvg) %>%"
"0","  pivot_longer(cols = c(probHomeAvg, probAwayAvg, probDrawAvg), names_to = ""probs_type"", values_to = ""probs"")"
"0",""
"0","# Reshape the data for payoffs into a ""long"" format"
"0","data_payoffs_long_max <- data %>%"
"0","  select(payoffHomeMax, payoffAwayMax, payoffDrawMax) %>%"
"0","  pivot_longer(cols = c(payoffHomeMax, payoffAwayMax, payoffDrawMax), names_to = ""payoff_type"", values_to = ""payoff"")"
"0",""
"0","# Reshape the data for payoffs into a ""long"" format"
"0","data_payoffs_long_avg <- data %>%"
"0","  select(payoffHomeAvg, payoffAwayAvg, payoffDrawAvg) %>%"
"0","  pivot_longer(cols = c(payoffHomeAvg, payoffAwayAvg, payoffDrawAvg), names_to = ""payoff_type"", values_to = ""payoff"")"
"0",""
"0","#combine payoff and probabilities data"
"0","if(nrow(data_probs_long_max) == nrow(data_payoffs_long_max)){"
"0","  data_long_max <- bind_cols(data_probs_long_max, data_payoffs_long_max %>% select(payoff))"
"0","} else {"
"0","  stop(""Mismatch in the length of the reshaped dataframes for maximum odds."")"
"0","}"
"0",""
"0","if(nrow(data_probs_long_avg) == nrow(data_payoffs_long_avg)){"
"0","  data_long_avg <- bind_cols(data_probs_long_avg, data_payoffs_long_avg %>% select(payoff))"
"0","} else {"
"0","  stop(""Mismatch in the length of the reshaped dataframes for average odds."")"
"0","}"
"0",""
"0",""
"0","#CALCULATE INFORMATION ON DECILES REQUIRED FOR THE FIGURE"
"0",""
"0","#calculate decile limits "
"0","data_deciles_max <- data_long_max %>%"
"0","  mutate(decile_max = cut(probs, breaks = quantile(probs, seq(0, 1, length.out = 11), na.rm = TRUE), labels = FALSE))"
"0",""
"0","data_deciles_avg <- data_long_avg %>%"
"0","  mutate(decile_avg = cut(probs, breaks = quantile(probs, seq(0, 1, length.out = 11), na.rm = TRUE), labels = FALSE))"
"0",""
"0",""
"0","# Calculate average values and confidence intervals for payoffs and probabilities by deciles"
"0","decile_summary_max <- data_deciles_max %>%"
"0","  group_by(decile_max) %>%"
"0","  summarise("
"0","    payoff_deciles_max = mean(payoff, na.rm = TRUE),"
"0","    prob_deciles_max = mean(probs, na.rm = TRUE),"
"0","    sd_payoff_deciles_max = sd(payoff, na.rm = TRUE),"
"0","    n = n()"
"0","  ) %>%"
"0","  mutate("
"0","    se_payoff_deciles_max = sd_payoff_deciles_max / sqrt(n),"
"0","    ci_lower_max = payoff_deciles_max - 1.96 * se_payoff_deciles_max,"
"0","    ci_higher_max = payoff_deciles_max + 1.96 * se_payoff_deciles_max,"
"0","  )"
"0",""
"0","decile_summary_avg <- data_deciles_avg %>%"
"0","  group_by(decile_avg) %>%"
"0","  summarise("
"0","    payoff_deciles_avg = mean(payoff, na.rm = TRUE),"
"0","    prob_deciles_avg = mean(probs, na.rm = TRUE),"
"0","    sd_payoff_deciles_avg = sd(payoff, na.rm = TRUE),"
"0","    n = n()"
"0","  ) %>%"
"0","  mutate("
"0","    se_payoff_deciles_avg = sd_payoff_deciles_avg / sqrt(n),"
"0","    ci_lower_avg = payoff_deciles_avg - 1.96 * se_payoff_deciles_avg,"
"0","    ci_higher_avg = payoff_deciles_avg + 1.96 * se_payoff_deciles_avg,"
"0","  )"
"0",""
"0","# Filter out rows where 'decile' is missing or blank"
"0","decile_summary_max <- decile_summary_max %>% filter(!is.na(decile_max))"
"0","decile_summary_avg <- decile_summary_avg %>% filter(!is.na(decile_avg))"
"0",""
"0",""
"0","#calculate average payoffs across all bets"
"0","mean_payoff_max <- mean(decile_summary_max$payoff_deciles_max, na.rm = TRUE)"
"0","mean_payoff_avg <- mean(decile_summary_avg$payoff_deciles_avg, na.rm = TRUE)"
"0",""
"0",""
"0","#CREATE AND SAVE FIGURE"
"0",""
"0","# create customised png file "
"0","png('Figure3.png', width = 750 , height = 525)"
"0","par(mfrow = c(1, 1))"
"0",""
"0","#plot payoffs per decile for average odds"
"0","plotCI(x = decile_summary_avg$prob_deciles_avg, "
"0","       y = decile_summary_avg$payoff_deciles_avg,"
"0","       li = decile_summary_avg$ci_lower_avg,"
"0","       ui = decile_summary_avg$ci_higher_avg,"
"0","       ylim= c(0.7, 1.05),"
"0","       xlab = ""Probability Deciles"","
"0","       ylab = ""Average Payoff"","
"0","       cex.lab = 1.5,"
"0","       col = ""blue"")  "
